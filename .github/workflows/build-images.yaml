name: Build Container Images

on:
  push:
    tags:
      - "image/v*"
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            ghcr.io/hapifhir/hapi
            docker.io/hapiproject/hapi
          tag-sha: false
          tag-match: "v(.*)"
      # waiting for https://github.com/crazy-max/ghaction-docker-meta/issues/13 for a cleaner solution
      - name: Docker distroless meta
        id: docker_distroless_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            ghcr.io/hapifhir/hapi
            docker.io/hapiproject/hapi
          tag-sha: false
          tag-match: "v(.*)"
          sep-tags: -distroless,
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name: Build and push distroless
        id: docker_build_distroless
        uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_distroless_meta.outputs.tags }}-distroless
          labels: ${{ steps.docker_distroless_meta.outputs.labels }}
          target: release-distroless
      - name: Print image digests
        run: |
          echo ${{ steps.docker_build.outputs.digest }}
          echo ${{ steps.docker_build_distroless.outputs.digest }}
